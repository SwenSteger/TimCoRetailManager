@using TRMBlazor.WebAssembly.Pages
@inject IApiHelper ApiHelper
@inject ILoggedInUserModel LoggedInUserModel
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<nav class="navbar navbar-expand navbar-dark bg-header">
	<div class="container d-flex flex-row justify-content-between">
		<div class="branding">
			<NavLink class="navbar-brand" href="" Match="NavLinkMatch.All">
				<span class="brand-img">
					<img src="/favicon.png" alt="Portfolio" class="img-fluid mr-2">
				</span>
				<span class="brand-title">TimCo RM</span>
			</NavLink>
		</div>

		@if (IsAuthenticated)
		{
			<ul class="navbar-nav me-auto">
				<li class="nav-item">
					<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
						<span class="oi oi-cart" aria-hidden="true"></span> Sales
					</NavLink>
				</li>
				<li class="nav-item">
					<NavLink class="nav-link" href="/profile" Match="NavLinkMatch.Prefix">
						<span class="oi oi-person" aria-hidden="true"></span> Profile
					</NavLink>
				</li>
			</ul>
			<div class="welcome_user">
				<span>Welcome, @Username</span>
				<button class="btn btn-danger my-2 my-sm-0" @onclick="HandleLogout">Logout</button>
			</div>
		}
		else
		{
			<div class="welcome_user">
				<button type="button" class="btn btn-outline-danger my-2 my-sm-0" data-bs-toggle="modal" data-bs-target="#loginModal">Login</button>
				<a href="/register" class="btn btn-outline-success my-2 my-sm-0">Register</a>
			</div>
		}
	</div>
</nav>

<div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="loginModalLabel" aria-hidden="true" @ref="loginModal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="loginModalLabel">Login</h5>
				<button type="button" class="btn btn-danger p-0" data-bs-dismiss="modal" aria-label="Close" @onclick="ClearErrorMessage">
					<span aria-hidden="true" style="padding-left: 8px; margin: 0 auto"><i class="oi oi-x"></i></span>
				</button>
			</div>
			<div class="modal-body">
				<Login @ref="_loginComponent" ClearErrorMessageCallback="ClearErrorMessage" />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal" @onclick="ClearErrorMessage">Close</button>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter] public bool IsAuthenticated { get; set; }
	[Parameter] public string Username { get; set; }
	
	private ElementReference loginModal;
	private Login? _loginComponent;

	private DotNetObjectReference<Navigation> _objectReference;


	protected override async Task OnInitializedAsync()
	{
		JsInteropEvents.OnJsRuntimeReady += LoadJSInterop;
	}

	private async Task LoadJSInterop()
	{
		_objectReference = DotNetObjectReference.Create(this);
		await JSRuntime.InvokeVoidAsync("clearModalErrorMessage", _objectReference);
	}

	public void Dispose()
	{
		JsInteropEvents.OnJsRuntimeReady -= LoadJSInterop;
		_objectReference?.Dispose();
	}

    private async Task HandleLogout()
    {
	    await LocalStorage.RemoveItemAsync("authToken");
		ApiHelper.Logout();
	    LoggedInUserModel = null;
	    NavigationManager.NavigateTo("/", true, true);
    }
	
	[JSInvokable]
	public void ClearErrorMessage()
	{
		_loginComponent?.ClearErrorMessage();
	}
}